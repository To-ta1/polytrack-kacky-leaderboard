import os, json, requests, threading, time
from datetime import datetime
from flask import Flask, render_template, redirect, url_for
import matplotlib.pyplot as plt
from matplotlib import ticker

app = Flask(__name__)

# -- Config --
track_names = [
    "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21",
    "22", "23", "24"
]
track_ids = [
    "97fa23a92920f75af26c8055d44626fc2fdc99baaa6ef3470c7d618252dcf8a2",
    "2a637ff690bee898e4b78ba02e3cb22dee02b1e066129dcc54d62aceaaff6574",
    "77b23e23610d2007fd79808ff9bb0c591befdea8c6497d638c36b682c39f776b",
    "5ac3dfdb34bf99afb130a1df50e4cc847b5d69758ce3b0c554a97dd25b888233",
    "68ea7a040a7383265be3291f2d60e92baf5c689d8e05e52ea1b3c326606296d7",
    "6eec7f2e5acab5d1ed37833beb0210825fa70cb06c806033c98b09de4d19ed84",
    "693a92369ef8c3253ddccb9e7eb77ee851b53555a64f042ee0f1a79f208dd07c",
    "ccad6a624009c3d82458bb05fc2e846199146760a4102840c8fe6d02379e2158",
    "6dbfe15348851f5f305d889133351f1ea8f0f39f7a9ca63593271d59664d4c9b",
    "ebd5fb3cc4d05decde89d1b591e609a965b4d0c0b98b108ca511b4acc61a87bc",
    "fdd24c4792c432fdcfc8b2de3c03be21c2e32955a05ee06fdf653c1195bf34a0",
    "1a5c721560a4eb7b5fe81aa56bbec80c5dcd5e1fdf6175d199ea54bc1f3f108f",
    "f8c92536e2a6f8eda2f62c2f3bfa6290099a99f0afeabd48cd27777d7b536526",
    "bfb02c542d50c4054bf720bbe83ac1a8d2fa6602ad0470cee5c7aac2a871e87d",
    "06c36781731474a465c6beaba20e148a118d2af7127bdcc9957081cb059c9ba7"
]
track_codes = [
    "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"
]
HISTORY_DIR = "history"
os.makedirs(HISTORY_DIR, exist_ok=True)
os.makedirs("static", exist_ok=True)


# Fetch leaderboard JSON
def fetch_leaderboard(track_id):
    url = (
        f"https://vps.kodub.com:43273/leaderboard?"
        f"version=0.5.0&trackId={track_id}&skip=0&amount=500&onlyVerified=false"
        f"&userTokenHash=89b15d5cb1d07073894030b58ece6140fc3f357ad7dacf7ecbbe5a78440bf6f9"
    )
    return requests.get(url).json()


def update_all_data():
    for idx, track_id in enumerate(track_ids):
        data = fetch_leaderboard(track_id)
        entries = data.get("entries", [])
        timestamp = datetime.utcnow().isoformat()
        path = os.path.join(HISTORY_DIR, f"{idx}.json")
        history = json.load(open(path)) if os.path.exists(path) else {}
        for e in entries:
            uid, name, frames = e["userId"], e["name"], e["frames"]
            hist = history.setdefault(uid, {"name": name, "data": []})
            hist["data"].append([timestamp, frames / 1000])
        json.dump(history, open(path, "w"), indent=2)
        generate_graph(history, idx)


def generate_graph(history, idx):
    plt.figure(figsize=(12, 6))
    ax = plt.gca()
    for info in history.values():
        times = [datetime.fromisoformat(t[0]) for t in info["data"]]
        vals = [t[1] for t in info["data"]]
        ax.plot(times, vals)
        ax.text(times[-1], vals[-1], info["name"], fontsize=8)
    ax.set_title(track_names[idx])
    ax.set_xlabel("Time")
    ax.set_ylabel("Run Time (s)")
    ax.yaxis.set_major_formatter(ticker.FormatStrFormatter("%.3f"))
    plt.tight_layout()
    plt.savefig(f"static/leaderboard_{idx}.png")
    plt.close()


def generate_overall():
    overall = {}
    for idx in range(len(track_ids)):
        path = os.path.join(HISTORY_DIR, f"{idx}.json")
        if not os.path.exists(path): continue
        history = json.load(open(path))
        ranked = sorted([(uid, info["name"], info["data"][-1][1])
                         for uid, info in history.items() if info["data"]],
                        key=lambda x: x[2])
        for place, (uid, name, _) in enumerate(ranked, start=1):
            data = overall.setdefault(uid, {
                "name": name,
                "maps_completed": 0,
                "places": []
            })
            data["maps_completed"] += 1
            data["places"].append(place)
    lb = [{
        "name": d["name"],
        "maps_completed": d["maps_completed"],
        "avg_place": sum(d["places"]) / len(d["places"])
    } for d in overall.values()]
    return sorted(lb, key=lambda x: (-x["maps_completed"], x["avg_place"]))


@app.route("/")
def home():
    return render_template("home.html", track_names=track_names)


@app.route("/track/<int:track_index>")
def track_page(track_index):
    if track_index >= len(track_ids): return "Invalid track", 404
    path = os.path.join(HISTORY_DIR, f"{track_index}.json")
    if not os.path.exists(path): update_all_data()
    history = json.load(open(path))
    lb = sorted([{
        "name": d["name"],
        "time": d["data"][-1][1]
    } for d in history.values() if d["data"]],
                key=lambda x: x["time"])
    return render_template("leaderboard.html",
                           track_index=track_index,
                           track_names=track_names,
                           track_codes=track_codes,
                           leaderboard=lb,
                           image_file=f"/static/leaderboard_{track_index}.png")


@app.route("/overall")
def overall_page():
    overall = generate_overall()
    return render_template("overall.html", leaderboard=overall)


@app.route("/ping")
def ping():
    update_all_data()
    return redirect(url_for("home"))
    return "OK", 200


def schedule_updates():
    while True:
        update_all_data()
        time.sleep(300)


if __name__ == "__main__":
    threading.Thread(target=schedule_updates, daemon=True).start()
    app.run(host="0.0.0.0", port=8080)
